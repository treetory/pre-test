/*
 * This file is generated by jOOQ.
 */
package com.treetory.dsltest.model.tables.records;


import com.treetory.dsltest.model.tables.Checkaccessrights;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckaccessrightsRecord extends TableRecordImpl<CheckaccessrightsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = -1852223152;

    /**
     * Setter for <code>mplus_test_data.checkaccessrights.hospitalCd</code>.
     */
    public void setHospitalcd(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mplus_test_data.checkaccessrights.hospitalCd</code>.
     */
    public String getHospitalcd() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mplus_test_data.checkaccessrights.isAllowed</code>.
     */
    public void setIsallowed(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mplus_test_data.checkaccessrights.isAllowed</code>.
     */
    public String getIsallowed() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mplus_test_data.checkaccessrights.rejectedMsg</code>.
     */
    public void setRejectedmsg(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mplus_test_data.checkaccessrights.rejectedMsg</code>.
     */
    public String getRejectedmsg() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Checkaccessrights.CHECKACCESSRIGHTS.HOSPITALCD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Checkaccessrights.CHECKACCESSRIGHTS.ISALLOWED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Checkaccessrights.CHECKACCESSRIGHTS.REJECTEDMSG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getHospitalcd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getIsallowed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRejectedmsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getHospitalcd();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIsallowed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRejectedmsg();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckaccessrightsRecord value1(String value) {
        setHospitalcd(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckaccessrightsRecord value2(String value) {
        setIsallowed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckaccessrightsRecord value3(String value) {
        setRejectedmsg(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckaccessrightsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CheckaccessrightsRecord
     */
    public CheckaccessrightsRecord() {
        super(Checkaccessrights.CHECKACCESSRIGHTS);
    }

    /**
     * Create a detached, initialised CheckaccessrightsRecord
     */
    public CheckaccessrightsRecord(String hospitalcd, String isallowed, String rejectedmsg) {
        super(Checkaccessrights.CHECKACCESSRIGHTS);

        set(0, hospitalcd);
        set(1, isallowed);
        set(2, rejectedmsg);
    }
}
