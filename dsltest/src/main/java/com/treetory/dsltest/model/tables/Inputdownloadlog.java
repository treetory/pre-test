/*
 * This file is generated by jOOQ.
 */
package com.treetory.dsltest.model.tables;


import com.treetory.dsltest.model.MplusTestData;
import com.treetory.dsltest.model.tables.records.InputdownloadlogRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Inputdownloadlog extends TableImpl<InputdownloadlogRecord> {

    private static final long serialVersionUID = 1423029336;

    /**
     * The reference instance of <code>mplus_test_data.inputdownloadlog</code>
     */
    public static final Inputdownloadlog INPUTDOWNLOADLOG = new Inputdownloadlog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InputdownloadlogRecord> getRecordType() {
        return InputdownloadlogRecord.class;
    }

    /**
     * The column <code>mplus_test_data.inputdownloadlog.hospitalCd</code>.
     */
    public final TableField<InputdownloadlogRecord, String> HOSPITALCD = createField("hospitalCd", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.returnCd</code>.
     */
    public final TableField<InputdownloadlogRecord, String> RETURNCD = createField("returnCd", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.returnMsg</code>.
     */
    public final TableField<InputdownloadlogRecord, String> RETURNMSG = createField("returnMsg", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.failCnt</code>.
     */
    public final TableField<InputdownloadlogRecord, String> FAILCNT = createField("failCnt", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.userId</code>.
     */
    public final TableField<InputdownloadlogRecord, String> USERID = createField("userId", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.userNm</code>.
     */
    public final TableField<InputdownloadlogRecord, String> USERNM = createField("userNm", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.appKind</code>.
     */
    public final TableField<InputdownloadlogRecord, String> APPKIND = createField("appKind", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.appVersion</code>.
     */
    public final TableField<InputdownloadlogRecord, String> APPVERSION = createField("appVersion", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.userIp</code>.
     */
    public final TableField<InputdownloadlogRecord, String> USERIP = createField("userIp", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.inputdownloadlog.currentDt</code>.
     */
    public final TableField<InputdownloadlogRecord, String> CURRENTDT = createField("currentDt", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>mplus_test_data.inputdownloadlog</code> table reference
     */
    public Inputdownloadlog() {
        this(DSL.name("inputdownloadlog"), null);
    }

    /**
     * Create an aliased <code>mplus_test_data.inputdownloadlog</code> table reference
     */
    public Inputdownloadlog(String alias) {
        this(DSL.name(alias), INPUTDOWNLOADLOG);
    }

    /**
     * Create an aliased <code>mplus_test_data.inputdownloadlog</code> table reference
     */
    public Inputdownloadlog(Name alias) {
        this(alias, INPUTDOWNLOADLOG);
    }

    private Inputdownloadlog(Name alias, Table<InputdownloadlogRecord> aliased) {
        this(alias, aliased, null);
    }

    private Inputdownloadlog(Name alias, Table<InputdownloadlogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Inputdownloadlog(Table<O> child, ForeignKey<O, InputdownloadlogRecord> key) {
        super(child, key, INPUTDOWNLOADLOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MplusTestData.MPLUS_TEST_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inputdownloadlog as(String alias) {
        return new Inputdownloadlog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inputdownloadlog as(Name alias) {
        return new Inputdownloadlog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Inputdownloadlog rename(String name) {
        return new Inputdownloadlog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Inputdownloadlog rename(Name name) {
        return new Inputdownloadlog(name, null);
    }
}
