/*
 * This file is generated by jOOQ.
 */
package com.treetory.dsltest.model.tables;


import com.treetory.dsltest.model.MplusTestData;
import com.treetory.dsltest.model.tables.records.GetshcwardlistRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getshcwardlist extends TableImpl<GetshcwardlistRecord> {

    private static final long serialVersionUID = -1621411697;

    /**
     * The reference instance of <code>mplus_test_data.getshcwardlist</code>
     */
    public static final Getshcwardlist GETSHCWARDLIST = new Getshcwardlist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetshcwardlistRecord> getRecordType() {
        return GetshcwardlistRecord.class;
    }

    /**
     * The column <code>mplus_test_data.getshcwardlist.hospitalCd</code>.
     */
    public final TableField<GetshcwardlistRecord, String> HOSPITALCD = createField("hospitalCd", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.getshcwardlist.wardCd</code>.
     */
    public final TableField<GetshcwardlistRecord, String> WARDCD = createField("wardCd", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>mplus_test_data.getshcwardlist.wardNm</code>.
     */
    public final TableField<GetshcwardlistRecord, String> WARDNM = createField("wardNm", org.jooq.impl.SQLDataType.VARCHAR(256).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>mplus_test_data.getshcwardlist</code> table reference
     */
    public Getshcwardlist() {
        this(DSL.name("getshcwardlist"), null);
    }

    /**
     * Create an aliased <code>mplus_test_data.getshcwardlist</code> table reference
     */
    public Getshcwardlist(String alias) {
        this(DSL.name(alias), GETSHCWARDLIST);
    }

    /**
     * Create an aliased <code>mplus_test_data.getshcwardlist</code> table reference
     */
    public Getshcwardlist(Name alias) {
        this(alias, GETSHCWARDLIST);
    }

    private Getshcwardlist(Name alias, Table<GetshcwardlistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Getshcwardlist(Name alias, Table<GetshcwardlistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Getshcwardlist(Table<O> child, ForeignKey<O, GetshcwardlistRecord> key) {
        super(child, key, GETSHCWARDLIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return MplusTestData.MPLUS_TEST_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getshcwardlist as(String alias) {
        return new Getshcwardlist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Getshcwardlist as(Name alias) {
        return new Getshcwardlist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Getshcwardlist rename(String name) {
        return new Getshcwardlist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Getshcwardlist rename(Name name) {
        return new Getshcwardlist(name, null);
    }
}
